package btc_relayer

import (
	"bytes"
	"encoding/hex"
	"fmt"
	"github.com/Zou-XueYan/btc_relayer/log"
	"github.com/btcsuite/btcd/wire"
	"os"
	"testing"
	"time"
)

var (
	txArr = []string{
		"01000000019f074c07f34ffdcac88f76aa403e0725a90870b974c777a7236d6db067481ff2020000006b483045022100c5647452812dd245de91536de723d35239cbd49bb4dd924a5b6376b099a8a716022078938060af6771a44913893eaf0b091de365ee3a7a6ecefa830bf5d4caf6c996012103128a2c4525179e47f38cf3fefca37a61548ca4610255b3fb4ee86de2d3e80c0fffffffff03204e00000000000017a91487a9652e9b396545598c0fc72cb5a98848bf93d3870000000000000000276a256600000000000000020000000000000000f3b8a17f1f957f60c88f105e32ebff3f022e56a4a8ae0800000000001976a91428d2e8cee08857f569e5a1b147c5d5e87339e08188ac00000000",
		"01000000014d369f59ba828a4996f47b03229cbb976a0d0ed841c8c2f7a8e843289b15e631020000006a47304402202676093014919f3aa5dd5237566e4690dfc3503809246c3601cac38c4bd7636202207277e47ec95a28cf6eb30bceb36252704086e2b04c13e35797b0862741d44528012103128a2c4525179e47f38cf3fefca37a61548ca4610255b3fb4ee86de2d3e80c0fffffffff03204e00000000000017a91487a9652e9b396545598c0fc72cb5a98848bf93d3870000000000000000276a256600000000000000020000000000000000f3b8a17f1f957f60c88f105e32ebff3f022e56a4d8230900000000001976a91428d2e8cee08857f569e5a1b147c5d5e87339e08188ac00000000",
		"01000000012de9998067a46027dff12f8c114cb67f9788f52af731caa22a4c0b68babc58d0020000006a4730440220014f7b9c643ce47275552583fe3785f1d72307207b9e95ec293b16cbb15e10bc02205b6452982da43ebc2ddba531cba43a88baad003f2fcaef265e4ec30e8c077b0a012103128a2c4525179e47f38cf3fefca37a61548ca4610255b3fb4ee86de2d3e80c0fffffffff03204e00000000000017a91487a9652e9b396545598c0fc72cb5a98848bf93d3870000000000000000276a256600000000000000020000000000000000f3b8a17f1f957f60c88f105e32ebff3f022e56a4e84a0900000000001976a91428d2e8cee08857f569e5a1b147c5d5e87339e08188ac00000000",
		"0100000001e94f4feea73d3a44ad41cc52ea9ba5ccba9094dbd351310497eafff8233e2bec020000006b483045022100b1d0ec22de2404bf25d620e2c4488d2489d0eb46beca29f5dc219ee464ecd9e3022068a3f0c045b86e14fb99c72173ff9dd8d65dd784fc3af2050085a7c8e9b67cdb012103128a2c4525179e47f38cf3fefca37a61548ca4610255b3fb4ee86de2d3e80c0fffffffff03204e00000000000017a91487a9652e9b396545598c0fc72cb5a98848bf93d3870000000000000000276a256600000000000000020000000000000000f3b8a17f1f957f60c88f105e32ebff3f022e56a418c00900000000001976a91428d2e8cee08857f569e5a1b147c5d5e87339e08188ac00000000",
		"0100000001cbf0d729953a6227098a45752ed871c621f938260a53bfc6c998a347e2fd62e4020000006b483045022100f2e9590d6a9fcd5abce3775b0d263194547890f825350e81927468d807c43dd70220165a5edbca9f1cd42a6197a20ac4d97985dcde02f303b061541c1f86e026c398012103128a2c4525179e47f38cf3fefca37a61548ca4610255b3fb4ee86de2d3e80c0fffffffff03204e00000000000017a91487a9652e9b396545598c0fc72cb5a98848bf93d3870000000000000000276a256600000000000000020000000000000000f3b8a17f1f957f60c88f105e32ebff3f022e56a430390a00000000001976a91428d2e8cee08857f569e5a1b147c5d5e87339e08188ac00000000",
		"01000000017b60622809f978db6b95b09cec9789e2d68539b5eb7b2015ae2f7d79028b320c020000006b48304502210088a67aa604db724f34b2410e813927d26ad3489655cfb252934b25713890a17b02203bbe698595467da469fd20a09049c5920e8f70cae591605375d16bc801253c1f012103128a2c4525179e47f38cf3fefca37a61548ca4610255b3fb4ee86de2d3e80c0fffffffff03204e00000000000017a91487a9652e9b396545598c0fc72cb5a98848bf93d3870000000000000000276a256600000000000000020000000000000000f3b8a17f1f957f60c88f105e32ebff3f022e56a430390a00000000001976a91428d2e8cee08857f569e5a1b147c5d5e87339e08188ac00000000",
		"010000000140b1e5b05e26757f799ebf9f9018f970e77b0e6f7123d19fabaf373a32c3d0a0020000006a47304402204fb2d2d3edebd65675aa8b27f24d2b2398cec0fbf9cac2cfcb7def6df9b7cd6202205d6881aae4b4d65d63efbc1ed1cbb669dc493811b94f2c1629573a5ef5568706012103128a2c4525179e47f38cf3fefca37a61548ca4610255b3fb4ee86de2d3e80c0fffffffff03204e00000000000017a91487a9652e9b396545598c0fc72cb5a98848bf93d3870000000000000000276a256600000000000000020000000000000000f3b8a17f1f957f60c88f105e32ebff3f022e56a430390a00000000001976a91428d2e8cee08857f569e5a1b147c5d5e87339e08188ac00000000",
	}
)

func TestNewBtcConfig(t *testing.T) {
	conf, err := NewBtcConfig("./conf.json")
	if err != nil {
		t.Fatalf("new btc config failed: %v", err)
	}

	fmt.Printf("config btc_addr: %s, nettype: %s\n", conf.BtcJsonRpcAddress, conf.NetType)
}

func TestNewBtcRelayer(t *testing.T) {
	r, err := NewBtcRelayer("./conf.json")
	if err != nil {
		t.Fatalf("Failed to new relayer: %v", err)
	}

	fmt.Printf("relayer's addr on allia-chain: %s\n", r.account.Address.ToHexString())
}

func TestBtcRelayer_BtcListen(t *testing.T) {
	r, err := NewBtcRelayer("./conf.json")
	if err != nil {
		t.Fatalf("Failed to new relayer: %v", err)
	}
	log.InitLog(log.InfoLog, log.PATH, log.Stdout)
	go r.BtcListen()
	go func() {
		for item := range r.relaying {
			fmt.Printf("Item heigh: %d\t", item.Height)
			fmt.Printf("Item proof: %s\t", item.Proof)
			fmt.Printf("Item txid: %s\n", item.Txid)
		}
	}()

	time.Sleep(time.Second * 60)
}

//func TestBtcRelayer_Relay(t *testing.T) {
//	r, err := NewBtcRelayer("./conf.json")
//	if err != nil {
//		t.Fatalf("Failed to new relayer: %v", err)
//	}
//	log.InitLog(log.InfoLog, log.PATH, log.Stdout)
//
//	go func() {
//		test := &observer.CrossChainItem{
//			Proof:  "000000204149a82a4db84c25eabdd220ae55e568f3332f9a9d6bcc21be8d010000000000f783cb176b1c29fcb191eeb7299a105fc5db9a42be7cec34d08b8d819bb64fe44d1c495d71a5021a2ad64e1e26000000077702820166697756300bb36b2268ff36d93bbe63d09d42b42c7eb52a06aa9153320007b74b0935cbd73dd85deb23a2cc2268514e72d3795b563db1f77f8503aac3690bf489db8b0f3630a0f50a6767790c6f178d1027385f14d7e70ce2622a4a125da8708c3ddfb554fd8a636152007ca6f7ad7251c2514a07ea19a3718fb6b464259f0e6b7b06e34ae8f6c2e54d4d10c603cda1d2c1ebaf093c074e5b51e3a131b237e55e259bf74174441256a61f9d62d250d06ddcec3f6f94a3f6f43e3e3e59a4fc0e7c7dc59b926c2de2f4e9176ffbf7545e17b763cdc962d829500c321002bf00",
//			Tx:     "0100000001ba32eb944a29e6c0d26189cc0cc67c5bd34d48ba876de114255bb6e3284ea7d1000000006a473044022040f94d2f640377d28f6aa0176477d0924c13a4772d1344c824ed69aac0d8c48b02200f9d475ff9f877a37b7d3e418f9cca6c0cb1909d3aa16361fd256c7aa05f80e9012103128a2c4525179e47f38cf3fefca37a61548ca4610255b3fb4ee86de2d3e80c0fffffffff0300350c000000000017a91487a9652e9b396545598c0fc72cb5a98848bf93d38700000000000000002c6a2a66000000000000000200000000000003e81727e090b158ee5c69c7e46076a996c4bd6159286ef9621225a0860100000000001976a91428d2e8cee08857f569e5a1b147c5d5e87339e08188ac00000000",
//			Height: 1572760,
//			Txid:   "aa03857ff7b13d565b79d3724e516822cca223eb5dd83dd7cb35094bb7070032",
//		}
//		time.Sleep(time.Second * 5)
//		r.relaying <- test
//	}()
//	go r.Relay()
//
//	time.Sleep(time.Second * 30)
//}

func TestBtcRelayer_AllianceListen(t *testing.T) {
	r, err := NewBtcRelayer("./conf.json")
	if err != nil {
		t.Fatalf("Failed to new relayer: %v", err)
	}
	log.InitLog(log.InfoLog, log.PATH, log.Stdout)
	go r.AllianceListen()
	go func() {
		for item := range r.Collecting {
			fmt.Printf("Item tx: %s\n", item.Tx)
		}
	}()

	time.Sleep(time.Second * 60)
}

func TestBtcRelayer_ReBroadcast(t *testing.T) {
	defer os.RemoveAll("./retry.bin")
	r, err := NewBtcRelayer("./conf.json")
	if err != nil {
		t.Fatal(err)
	}
	log.InitLog(0, log.Stdout)
	for _, tx := range txArr[:3] {
		r.retryDB.Put(tx)
	}

	go r.ReBroadcast()
	time.Sleep(3 * time.Minute)
}

func TestS(t *testing.T) {
	str := "010000000311fea08426d1ab156c894fced9e7ddc795d625891d587d81bf011fe7e7f7437200000000fd5e0200483045022100823e0f0d14a297a5c7cb590d0ea216469273bf12fb5e4c437ac3eec84f7e1e3c02202a356cac0a54fe336b75c74702e7fb1f759336f372b3e743f2603581ee5902ec01483045022100f86d265859bb3f4619d9f32d91705b19e8e94df3734d81cca05b04ffb3927829022015ff7f88e635b59f08ee11c5c967a4de9578f4136b3996307427f3dea05993ae01473044022066301d1e335554e828d7d70cd6df89352acc475a7bbf17e16b87e1ac18ca2141022019b219423f415c848291f07eb68f6bf2e12d79ecaf95e7b90656eb09969fec250147304402202fc13748831c2c998a9f33bb7482afb8f6e3b89191e0e24e18b82d353b66b5cf02202ac77c4b048a375b122b1c0601975eaf8dbf6fe1b1913605f95a96e07c0a333701473044022058327e2e6e3d69362ff27f034949390ed2669baf64705c2986057484d23db0a502207d5f4a34b5bfb17edbf76d999d013d92f5382ee7964f06f1711d291016a1f8c7014cf15521023ac710e73e1410718530b2686ce47f12fa3c470a9eb6085976b70b01c64c9f732102c9dc4d8f419e325bbef0fe039ed6feaf2079a2ef7b27336ddb79be2ea6e334bf2102eac939f2f0873894d8bf0ef2f8bbdd32e4290cbf9632b59dee743529c0af9e802103378b4a3854c88cca8bfed2558e9875a144521df4a75ab37a206049ccef12be692103495a81957ce65e3359c114e6c2fe9f97568be491e3f24d6fa66cc542e360cd662102d43e29299971e802160a92cfcd4037e8ae83fb8f6af138684bebdc5686f3b9db21031e415c04cbc9b81fbee6e04d8c902e8f61109a2c9883a959ba528c52698c055a57aeffffffff89d3036606437e789a81a9518b4d6384b2e43987a93fd6030cd289ad1508a5e200000000fd600200483045022100ad76ae04baee7d4d6ce30968f5140e76a72b2683c524b47efc3a20ff10ae14450220066e1f62d0df58fcf2274e2d37d5f3d20bff7cf2d96f84b5dccbd18d8a1ab31001483045022100e02f15541560e606bb00b3487e8421f440d1a709f2f0896ef1bd61736f4fc5f402204a68b4c850e2efdd39c08f1db2cdb9aff87da78503e39dc2e2cf076715da908e01483045022100e348cbeea6f20cab4e02fa90639809ddb259b45090bdd3a46796347ee7a8396802206f4a826af2f7af369c986c4539d6fdd9bcad38113e7449fd4816ee6605f2943c014730440220751574412e392ac8cb88a7fa47931bfe4cf3542771ce22f95d1b5d38764e7ae20220523b9273b294f619eedd920f70cba8724bd9e7bf3192abf731e7c4706f2fc50001483045022100d57eaa1a500620543a3f3d553d5613d29df9771ec9bc1a042c20a925bf1bfdb102206c103fb167cb52e23e1fa23d8e2aec6b67ed2d13d6c74bd77014b10d93e22f9e014cf15521023ac710e73e1410718530b2686ce47f12fa3c470a9eb6085976b70b01c64c9f732102c9dc4d8f419e325bbef0fe039ed6feaf2079a2ef7b27336ddb79be2ea6e334bf2102eac939f2f0873894d8bf0ef2f8bbdd32e4290cbf9632b59dee743529c0af9e802103378b4a3854c88cca8bfed2558e9875a144521df4a75ab37a206049ccef12be692103495a81957ce65e3359c114e6c2fe9f97568be491e3f24d6fa66cc542e360cd662102d43e29299971e802160a92cfcd4037e8ae83fb8f6af138684bebdc5686f3b9db21031e415c04cbc9b81fbee6e04d8c902e8f61109a2c9883a959ba528c52698c055a57aeffffffffb585e37d38bb275278e1622b66cf53259ca33e08929e4f16f6439e0cdc7fdb7500000000fd5e0200483045022100f2a3422523ff6c33c9e10188d2b62503ab7dfdde03118f52140be4393ba0c86502203afafde7c3c0d620db1732cbc89ee6088294ad10a0c33fc9e5d283ba1bed8e9c0147304402203734f5d065c703541a240ef3a350ba3e1c0d566f81c59f358887d9877cc7cdd70220746adbb82be715b331e197e5bb33d929298b99784f4739edb82b7ff0858a79930147304402206d524931764e0fc89962c5828fd35c4389a7ffff5b335b1d66eee08ba9fff7e102203f9182b03a1d111506602f481c86c2a6a337cb33f313af8b31e4434025de36b1014730440220134063af81d4fba15f721289ae57e370d65d6a7a7146076a828e6ccf53249404022036485246954d7b04992c65e0f58307117391347199eee287537eea4a18ca7b6101483045022100ba8a32796185819649911e5e530522af06c1350e22965104278980f5625ffed8022000fb054e21004140e7be4a7caf8f7c756b4a98136c2be79440a03b438681b0f4014cf15521023ac710e73e1410718530b2686ce47f12fa3c470a9eb6085976b70b01c64c9f732102c9dc4d8f419e325bbef0fe039ed6feaf2079a2ef7b27336ddb79be2ea6e334bf2102eac939f2f0873894d8bf0ef2f8bbdd32e4290cbf9632b59dee743529c0af9e802103378b4a3854c88cca8bfed2558e9875a144521df4a75ab37a206049ccef12be692103495a81957ce65e3359c114e6c2fe9f97568be491e3f24d6fa66cc542e360cd662102d43e29299971e802160a92cfcd4037e8ae83fb8f6af138684bebdc5686f3b9db21031e415c04cbc9b81fbee6e04d8c902e8f61109a2c9883a959ba528c52698c055a57aeffffffff0246010000000000001976a91428d2e8cee08857f569e5a1b147c5d5e87339e08188acae0000000000000017a91487a9652e9b396545598c0fc72cb5a98848bf93d38700000000"
	mtx := wire.NewMsgTx(wire.TxVersion)
	txb, _ := hex.DecodeString(str)

	mtx.BtcDecode(bytes.NewBuffer(txb), wire.ProtocolVersion, wire.LatestEncoding)
	fmt.Println("length is", len(mtx.TxIn), mtx.TxHash().String())
	for _, i := range mtx.TxIn {
		fmt.Println(i.PreviousOutPoint.String())
	}

	for _, o := range mtx.TxOut {
		fmt.Printf("out: %d\n", o.Value)
	}
	var h uint32
	h = uint32(10) - 15
	fmt.Println(h)
}
